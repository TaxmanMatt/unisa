a) A pointer better helps you manage your memory by indicating the memory address of a variable.

b) The dereferencing operator produces the variable it points to.

c) p1 = p2; assigns the value of one pointer to another.
   *p1 = *p2; assigns the variable that the pointer is pointing to, to another.

d) Is an undefined pointer variable.

e) Is a variable that's created while a program is running.

f) The new operator allocates memory space for a variable.

g) The delete operator deletes a dynamic variable and returns the memory originally allocated.

h) Is an allocated space of memory on a computer for dynamic variables.

i) Dynamic variables are created while the program is running while automatic variables are the ones we declare in our functions when writing code.

j) A dynamic array is an array with an unspecified size when initially writing the array.

k) Dynamic arrays are more considerate in terms of memory use. 

l) When assigning a pointer to an array, the pointer essentially becomes the array.

m) int* p1, p2; only assigns p1 as the pointer variable and p2 a normal variable whereas the latter assigns both p1 and p2 as pointer variables.

n) 
i) typedef double DoublePtr;
   DoublePtr fPtr1, fPtr1;

ii) double *p;
    p = fPtr1; 

iii)  *fPtr1 = *fPtr2;

iv) cout << p;

v) cout << *p;

vi) delete *p;

vii) DoublePtr = NULL;

o)

p) 

